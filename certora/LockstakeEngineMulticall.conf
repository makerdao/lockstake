{
    "files": [
        "src/LockstakeEngine.sol",
        "src/LockstakeUrn.sol",
        "src/LockstakeMkr.sol",
        "certora/harness/dss/Vat.sol",
        "test/mocks/VoteDelegateMock.sol",
        "certora/harness/tokens/MkrMock.sol",
        "test/mocks/StakingRewardsMock.sol",
        "certora/harness/MulticallExecutor.sol"
    ],
    "solc_map": {
        "LockstakeEngine": "solc-0.8.21",
        "LockstakeUrn": "solc-0.8.21",
        "LockstakeMkr": "solc-0.8.21",
        "Vat": "solc-0.5.12",
        "VoteDelegateMock": "solc-0.8.21",
        "MkrMock": "solc-0.8.21",
        "StakingRewardsMock": "solc-0.8.21",
        "MulticallExecutor": "solc-0.8.21"
    },
    "solc_optimize_map": {
        "LockstakeEngine": "200",
        "LockstakeUrn": "200",
        "LockstakeMkr": "200",
        "Vat": "0",
        "MkrMock": "0",
        "VoteDelegateMock": "0",
        "StakingRewardsMock": "0",
        "MulticallExecutor": "0"
    },
    "link": [
        "LockstakeEngine:vat=Vat",
        "LockstakeEngine:mkr=MkrMock",
        "LockstakeEngine:lsmkr=LockstakeMkr",
        "LockstakeUrn:engine=LockstakeEngine",
        "LockstakeUrn:lsmkr=LockstakeMkr",
        "LockstakeUrn:vat=Vat",
        "VoteDelegateMock:gov=MkrMock",
        "MulticallExecutor:engine=LockstakeEngine"
    ],
    "verify": "LockstakeEngine:certora/LockstakeEngineMulticall.spec",
    "prover_args": [
        "-rewriteMSizeAllocations true",
        "-depth 0"
    ],
    "smt_timeout": "7000",
    "rule_sanity": "basic",
    "optimistic_loop": true,
    // NOTE: The number of loop iterations should be at least the length of the arrays
    // given to `multicall`.
    "loop_iter": "4",
    "multi_assert_check": true,
    "parametric_contracts": ["LockstakeEngine"],
    "build_cache": true,
    "msg": "LockstakeEngine"
}
