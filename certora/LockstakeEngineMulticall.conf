{
    "files": [
        "src/LockstakeEngine.sol",
        // "src/LockstakeUrn.sol",
        // "src/LockstakeMkr.sol",
        // "certora/harness/dss/Jug.sol",
        "certora/harness/dss/Vat.sol",
        // "test/mocks/VoteDelegateMock.sol",
        // "certora/harness/VoteDelegate2Mock.sol",
        // "test/mocks/VoteDelegateFactoryMock.sol",
        // "test/mocks/NstJoinMock.sol",
        // "test/mocks/NstMock.sol",
        "certora/harness/tokens/MkrMock.sol",
        // "test/mocks/MkrNgtMock.sol",
        // "certora/harness/tokens/NgtMock.sol",
        // "certora/harness/tokens/RewardsMock.sol",
        // "test/mocks/StakingRewardsMock.sol",
        // "certora/harness/StakingRewards2Mock.sol",
        "certora/harness/MulticallExecutor.sol"
    ],
    "solc_map": {
        "LockstakeEngine": "solc-0.8.21",
        // "LockstakeUrn": "solc-0.8.21",
        // "LockstakeMkr": "solc-0.8.21",
        // "Jug": "solc-0.5.12",
        "Vat": "solc-0.5.12",
        // "VoteDelegateMock": "solc-0.8.21",
        // "VoteDelegate2Mock": "solc-0.8.21",
        // "VoteDelegateFactoryMock": "solc-0.8.21",
        // "NstJoinMock": "solc-0.8.21",
        // "NstMock": "solc-0.8.21",
        "MkrMock": "solc-0.8.21",
        // "MkrNgtMock": "solc-0.8.21",
        // "NgtMock": "solc-0.8.21",
        // "StakingRewardsMock": "solc-0.8.21",
        // "StakingRewards2Mock": "solc-0.8.21",
        // "RewardsMock": "solc-0.8.21",
        "MulticallExecutor": "solc-0.8.21"
    },
    "solc_optimize_map": {
        "LockstakeEngine": "200",
        // "LockstakeUrn": "200",
        // "LockstakeMkr": "200",
        // "Jug": "0",
        "Vat": "0",
        // "NstJoinMock": "0",
        // "NstMock": "0",
        "MkrMock": "0",
        // "MkrNgtMock": "0",
        // "NgtMock": "0",
        // "VoteDelegateMock": "0",
        // "VoteDelegate2Mock": "0",
        // "VoteDelegateFactoryMock": "0",
        // "StakingRewardsMock": "0",
        // "StakingRewards2Mock": "0",
        // "RewardsMock": "0",
        "MulticallExecutor": "0"
    },
    "link": [
        // "LockstakeEngine:jug=Jug",
        // "LockstakeEngine:voteDelegateFactory=VoteDelegateFactoryMock",
        "LockstakeEngine:vat=Vat",
        // "LockstakeEngine:nstJoin=NstJoinMock",
        // "LockstakeEngine:nst=NstMock",
        "LockstakeEngine:mkr=MkrMock",
        // "LockstakeEngine:lsmkr=LockstakeMkr",
        // "LockstakeEngine:mkrNgt=MkrNgtMock",
        // "LockstakeEngine:ngt=NgtMock",
        // "LockstakeEngine:urnImplementation=LockstakeUrn",
        // "LockstakeUrn:engine=LockstakeEngine",
        // "LockstakeUrn:lsmkr=LockstakeMkr",
        // "LockstakeUrn:vat=Vat",
        // "Jug:vat=Vat",
        // "NstJoinMock:vat=Vat",
        // "NstJoinMock:nst=NstMock",
        // "MkrNgtMock:mkr=MkrMock",
        // "MkrNgtMock:ngt=NgtMock",
        // "VoteDelegateMock:gov=MkrMock",
        // "VoteDelegate2Mock:gov=MkrMock",
        // "VoteDelegateFactoryMock:gov=MkrMock",
        // "StakingRewardsMock:rewardsToken=RewardsMock",
        // "StakingRewardsMock:stakingToken=LockstakeMkr",
        // "StakingRewards2Mock:rewardsToken=RewardsMock",
        // "StakingRewards2Mock:stakingToken=LockstakeMkr",
        "MulticallExecutor:engine=LockstakeEngine"
    ],
    "verify": "LockstakeEngine:certora/LockstakeEngineMulticall.spec",
    "prover_args": [
        "-rewriteMSizeAllocations true",
        "-depth 0"
    ],
    "smt_timeout": "7000",
    "rule_sanity": "basic",
    "optimistic_loop": true,
    // NOTE: The number of loop iterations should be at least the length of the arrays
    // given to `multicall`.
    "loop_iter": "4",
    "multi_assert_check": true,
    "parametric_contracts": ["LockstakeEngine"],
    "msg": "LockstakeEngine"
}
