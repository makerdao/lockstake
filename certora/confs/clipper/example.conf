{
    "files": [
        "src/LockstakeClipper.sol",
        "test/mocks/Vat.sol",
        "test/mocks/Dog.sol",
        // Since we summarized `price` as `NONDET` these are redundant, use
        // them if you want to use a dispatcher for `price`.
        // "test/mocks/Abaci.sol:LinearDecrease",
        // "test/mocks/Abaci.sol:StairstepExponentialDecrease",
        // "test/mocks/Abaci.sol:ExponentialDecrease",
        "test/mocks/LockstakeEngineMock.sol",
        "test/mocks/GemMock.sol",
        "test/mocks/Spot.sol:Spotter",
        "test/mocks/PipMock.sol",
        "test/mocks/Vow.sol",
        "test/mocks/Flop.sol:Flopper",
        "test/mocks/Flap.sol:Flapper",
        // Including all callees
        "test/mocks/ClipperCallee.sol:BadGuy",
        "test/mocks/ClipperCallee.sol:RedoGuy",
        "test/mocks/ClipperCallee.sol:KickGuy",
        "test/mocks/ClipperCallee.sol:FileUintGuy",
        "test/mocks/ClipperCallee.sol:YankGuy"
    ],
    "solc": "solc8.16",
    "verify": "LockstakeClipper:certora/specs/clipper/example.spec",
    "parametric_contracts": [
        "LockstakeClipper",
        "BadGuy",
        "RedoGuy",
        "KickGuy",
        "FileUintGuy",
        "YankGuy"
    ],
    "rule_sanity": "basic",
    "link": [
        // We can link to a particular Abacus if needed, for example:
        // "LockstakeClipper:calc=LinearDecrease"
        "LockstakeClipper:vat=Vat",
        "LockstakeClipper:dog=Dog",
        // NOTE: using a mock, maybe it would be better to use the real engine?
        "LockstakeClipper:engine=LockstakeEngineMock",
        "LockstakeClipper:spotter=Spotter",
        "LockstakeEngineMock:vat=Vat",
        "Spotter:vat=Vat",
        "Dog:vat=Vat",
        "Dog:vow=Vow",
        "Vow:vat=Vat",
        "Vow:flopper=Flopper",
        "Vow:flapper=Flapper",
        "Flopper:vat=Vat",
        "Flopper:gem=GemMock",
        "Flapper:vat=Vat",
        "Flapper:gem=GemMock",
        // NOTE: we linked all the callees to the `LockstakeClipper`
        "BadGuy:clip=LockstakeClipper",
        "RedoGuy:clip=LockstakeClipper",
        "KickGuy:clip=LockstakeClipper",
        "FileUintGuy:clip=LockstakeClipper",
        "YankGuy:clip=LockstakeClipper"
    ],
    "contract_recursion_limit": "2",  // Increased to allow for recursion
    "msg": "LockstakeClipper spec example"
}
